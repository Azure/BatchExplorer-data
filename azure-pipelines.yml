# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: 'Ubuntu 16.04'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: 3.7.0
    architecture: 'x64'

- task: PythonScript@0
  displayName: 'Template Runner'
  inputs:
    scriptSource: 'inline'
    script: |
      """Search all subdirectories for `Runner.py`."""
      from glob import iglob
      from os import path
      import os
      # Python >= 3.7.0
      print("PS_BATCH_ACCOUNT_NAME:{} ,BatchAccountKey:{} ,PS_BATCH_ACCOUNT_SUB:{} ,PS_BATCH_ACCOUNT_URL:{} ,PS_BATCH_ACCOUNT_NAME:{} ,PS_STORAGE_ACCOUNT_NAME:{} ,StorageAccountKey:{} ,PS_SERVICE_PRINCIPAL_CREDENTIALS_CLIENT_ID:{} ,ServicePrincipalCredentialsSecret:{} ,PS_SERVICE_PRINCIPAL_CREDENTIALS_TENANT:{} ,PS_SERVICE_PRINCIPAL_CREDENTIALS_RESOUCE:{}".format($(PS_BATCH_ACCOUNT_NAME) ,$(BatchAccountKey) ,$(PS_BATCH_ACCOUNT_SUB) ,$(PS_BATCH_ACCOUNT_URL) ,$(PS_BATCH_ACCOUNT_NAME) ,$(PS_STORAGE_ACCOUNT_NAME) ,$(StorageAccountKey) ,$(PS_SERVICE_PRINCIPAL_CREDENTIALS_CLIENT_ID) ,$(ServicePrincipalCredentialsSecret) ,$(PS_SERVICE_PRINCIPAL_CREDENTIALS_TENANT) ,$(PS_SERVICE_PRINCIPAL_CREDENTIALS_RESOUCE))
      Runner_py = next(iglob(path.join('**', 'Runner.py'), recursive=True), None)
      if not Runner_py:
          raise SystemExit('Could not find a Runner.py')
      project_location = path.dirname(path.abspath(Runner_py))
      print('Starting the {}', project_location)
      print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))
- script: |
    python -m pip install --upgrade pip setuptools wheel django
    pip install -r Runner/requirements.txt
  displayName: 'Install prerequisites'

- script: |
    pushd '$(projectRoot)'
    python Runner.py "Tests/TestConfiguration.json $(PS_BATCH_ACCOUNT_NAME) $(BatchAccountKey) $(PS_BATCH_ACCOUNT_SUB)
     $(PS_BATCH_ACCOUNT_URL) $(PS_BATCH_ACCOUNT_NAME) $(PS_STORAGE_ACCOUNT_NAME) $(StorageAccountKey) 
     $(PS_SERVICE_PRINCIPAL_CREDENTIALS_CLIENT_ID) $(ServicePrincipalCredentialsSecret) $(PS_SERVICE_PRINCIPAL_CREDENTIALS_TENANT)
     $(PS_SERVICE_PRINCIPAL_CREDENTIALS_RESOUCE)" 
  condition: succeededOrFailed()
  displayName: 'Run tests'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit' # Options: JUnit, NUnit, VSTest, xUnit
    testResultsFiles: "Runner/Tests/output.xml"
    testRunTitle: 'Rendering Image Tests'
    buildPlatform: